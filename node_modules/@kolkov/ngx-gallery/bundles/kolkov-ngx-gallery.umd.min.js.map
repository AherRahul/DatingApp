{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kolkov/ngx-gallery/lib/ngx-gallery.service.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-animation.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-order.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-layout.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image-size.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-options.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-ordered-image.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.module.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Renderer2","Injectable","providedIn","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","index","previewOpen","EventEmitter","previewClose","activeChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","src","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","tslib_1.__decorate","Input","Output","ViewChild","static","HostListener","Component","selector","template","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","click","canChangeImage","reset","selectedIndex","getImages","lazyLoading","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","action","icon","disabled","titleText","onClick","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryImageSize","Cover","Contain","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryComponent","myElement","options","imagesReady","change","previewChange","oldImagesLength","prevBreakpoint","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","NgxGalleryOrderedImage","medium","bigImages","big","labels","label","breakpoints","window","pop","concat","__spread","a","sort","combineOptions","second","keys","val","HostBinding","encapsulation","ViewEncapsulation","None","providers","NgxGalleryArrowsComponent","prevClick","nextClick","handlePrevClick","handleNextClick","NgxGalleryActionComponent","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryBulletsComponent","active","getBullets","handleChange","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","__","constructor","create","tslib_1.__extends","HammerGestureConfig","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {ElementRef, Injectable, Renderer2} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxGalleryService {\r\n  private swipeHandlers: Map<string, (() => void)[]> = new Map<string, (() => void)[]>();\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: () => void, prevHandler: () => void): void {\r\n\r\n    const handlers = this.getSwipeHandlers(id);\r\n\r\n    // swipeleft and swiperight are available only if hammerjs is included\r\n    try {\r\n      if (status && !handlers) {\r\n        this.swipeHandlers.set(id, [\r\n          this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\r\n          this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\r\n        ]);\r\n      } else if (!status && handlers) {\r\n        handlers.map((handler) => handler());\r\n        this.removeSwipeHandlers(id);\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  validateUrl(url: string): string {\r\n    if (url.replace) {\r\n      return url.replace(new RegExp(' ', 'g'), '%20')\r\n        .replace(new RegExp('\\'', 'g'), '%27');\r\n    } else {\r\n      return url;\r\n    }\r\n  }\r\n\r\n  getBackgroundUrl(image: string) {\r\n    return 'url(\\'' + this.validateUrl(image) + '\\')';\r\n  }\r\n\r\n  private getSwipeHandlers(id: string): (() => void)[] | undefined {\r\n    return this.swipeHandlers.get(id);\r\n  }\r\n\r\n  private removeSwipeHandlers(id: string): void {\r\n    this.swipeHandlers.delete(id);\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input, OnChanges, OnDestroy,\r\n  OnInit,\r\n  Output, Renderer2,\r\n  SimpleChanges,\r\n  ViewChild, ViewEncapsulation\r\n} from '@angular/core';\r\nimport {DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl} from '@angular/platform-browser';\r\nimport {NgxGalleryService} from '../ngx-gallery.service';\r\nimport {NgxGalleryAction} from '../ngx-gallery-action';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-preview',\r\n  templateUrl: './ngx-gallery-preview.component.html',\r\n  styleUrls: ['./ngx-gallery-preview.component.scss'],\r\n  // encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class NgxGalleryPreviewComponent implements OnInit, OnDestroy, OnChanges {\r\n  src: SafeUrl;\r\n  srcIndex: number;\r\n  description: string;\r\n  showSpinner = false;\r\n  positionLeft = 0;\r\n  positionTop = 0;\r\n  zoomValue = 1;\r\n  loading = false;\r\n  rotateValue = 0;\r\n  index = 0;\r\n\r\n  @Input() images: string[] | SafeResourceUrl[];\r\n  @Input() descriptions: string[];\r\n  @Input() showDescription: boolean;\r\n  @Input() arrows: boolean;\r\n  @Input() arrowsAutoHide: boolean;\r\n  @Input() swipe: boolean;\r\n  @Input() fullscreen: boolean;\r\n  @Input() forceFullscreen: boolean;\r\n  @Input() closeOnClick: boolean;\r\n  @Input() closeOnEsc: boolean;\r\n  @Input() keyboardNavigation: boolean;\r\n  @Input() arrowPrevIcon: string;\r\n  @Input() arrowNextIcon: string;\r\n  @Input() closeIcon: string;\r\n  @Input() fullscreenIcon: string;\r\n  @Input() spinnerIcon: string;\r\n  @Input() autoPlay: boolean;\r\n  @Input() autoPlayInterval: number;\r\n  @Input() autoPlayPauseOnHover: boolean;\r\n  @Input() infinityMove: boolean;\r\n  @Input() zoom: boolean;\r\n  @Input() zoomStep: number;\r\n  @Input() zoomMax: number;\r\n  @Input() zoomMin: number;\r\n  @Input() zoomInIcon: string;\r\n  @Input() zoomOutIcon: string;\r\n  @Input() animation: boolean;\r\n  @Input() actions: NgxGalleryAction[];\r\n  @Input() rotate: boolean;\r\n  @Input() rotateLeftIcon: string;\r\n  @Input() rotateRightIcon: string;\r\n  @Input() download: boolean;\r\n  @Input() downloadIcon: string;\r\n  @Input() bullets: string;\r\n\r\n  @Output() previewOpen = new EventEmitter();\r\n  @Output() previewClose = new EventEmitter();\r\n  @Output() activeChange = new EventEmitter<number>();\r\n\r\n  @ViewChild('previewImage', { static: false }) previewImage: ElementRef;\r\n\r\n  private isOpen = false;\r\n  private timer;\r\n  private initialX = 0;\r\n  private initialY = 0;\r\n  private initialLeft = 0;\r\n  private initialTop = 0;\r\n  private isMove = false;\r\n\r\n  private keyDownListener: () => void;\r\n\r\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\r\n              private helperService: NgxGalleryService, private renderer: Renderer2,\r\n              private changeDetectorRef: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    if (this.arrows && this.arrowsAutoHide) {\r\n      this.arrows = false;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.swipe) {\r\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\r\n        'preview', () => this.showNext(), () => this.showPrev());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.keyDownListener) {\r\n      this.keyDownListener();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    if (this.arrowsAutoHide && !this.arrows) {\r\n      this.arrows = true;\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (this.arrowsAutoHide && this.arrows) {\r\n      this.arrows = false;\r\n    }\r\n  }\r\n\r\n  onKeyDown(e) {\r\n    if (this.isOpen) {\r\n      if (this.keyboardNavigation) {\r\n        if (this.isKeyboardPrev(e)) {\r\n          this.showPrev();\r\n        } else if (this.isKeyboardNext(e)) {\r\n          this.showNext();\r\n        }\r\n      }\r\n      if (this.closeOnEsc && this.isKeyboardEsc(e)) {\r\n        this.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  open(index: number): void {\r\n    this.previewOpen.emit();\r\n\r\n    this.index = index;\r\n    this.isOpen = true;\r\n    this.show(true);\r\n\r\n    if (this.forceFullscreen) {\r\n      this.manageFullscreen();\r\n    }\r\n\r\n    this.keyDownListener = this.renderer.listen('window', 'keydown', (e) => this.onKeyDown(e));\r\n  }\r\n\r\n  close(): void {\r\n    this.isOpen = false;\r\n    this.closeFullscreen();\r\n    this.previewClose.emit();\r\n\r\n    this.stopAutoPlay();\r\n\r\n    if (this.keyDownListener) {\r\n      this.keyDownListener();\r\n    }\r\n  }\r\n\r\n  imageMouseEnter(): void {\r\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n      this.stopAutoPlay();\r\n    }\r\n  }\r\n\r\n  imageMouseLeave(): void {\r\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n      this.startAutoPlay();\r\n    }\r\n  }\r\n\r\n  startAutoPlay(): void {\r\n    if (this.autoPlay) {\r\n      this.stopAutoPlay();\r\n\r\n      this.timer = setTimeout(() => {\r\n        if (!this.showNext()) {\r\n          this.index = -1;\r\n          this.showNext();\r\n        }\r\n      }, this.autoPlayInterval);\r\n    }\r\n  }\r\n\r\n  stopAutoPlay(): void {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n    }\r\n  }\r\n\r\n  showAtIndex(index: number): void {\r\n    this.index = index;\r\n    this.show();\r\n  }\r\n\r\n  showNext(): boolean {\r\n    if (this.canShowNext()) {\r\n      this.index++;\r\n\r\n      if (this.index === this.images.length) {\r\n        this.index = 0;\r\n      }\r\n\r\n      this.show();\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  showPrev(): void {\r\n    if (this.canShowPrev()) {\r\n      this.index--;\r\n\r\n      if (this.index < 0) {\r\n        this.index = this.images.length - 1;\r\n      }\r\n\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  canShowNext(): boolean {\r\n    if (this.loading) {\r\n      return false;\r\n    } else if (this.images) {\r\n      return this.infinityMove || this.index < this.images.length - 1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canShowPrev(): boolean {\r\n    if (this.loading) {\r\n      return false;\r\n    } else if (this.images) {\r\n      return this.infinityMove || this.index > 0;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  manageFullscreen(): void {\r\n    if (this.fullscreen || this.forceFullscreen) {\r\n      const doc = document as any;\r\n\r\n      if (!doc.fullscreenElement && !doc.mozFullScreenElement\r\n        && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n        this.openFullscreen();\r\n      } else {\r\n        this.closeFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  getSafeUrl(image: string): SafeUrl {\r\n    return image.substr(0, 10) === 'data:image' ?\r\n      image : this.sanitization.bypassSecurityTrustUrl(image);\r\n  }\r\n\r\n  zoomIn(): void {\r\n    if (this.canZoomIn()) {\r\n      this.zoomValue += this.zoomStep;\r\n\r\n      if (this.zoomValue > this.zoomMax) {\r\n        this.zoomValue = this.zoomMax;\r\n      }\r\n    }\r\n  }\r\n\r\n  zoomOut(): void {\r\n    if (this.canZoomOut()) {\r\n      this.zoomValue -= this.zoomStep;\r\n\r\n      if (this.zoomValue < this.zoomMin) {\r\n        this.zoomValue = this.zoomMin;\r\n      }\r\n\r\n      if (this.zoomValue <= 1) {\r\n        this.resetPosition();\r\n      }\r\n    }\r\n  }\r\n\r\n  rotateLeft(): void {\r\n    this.rotateValue -= 90;\r\n  }\r\n\r\n  rotateRight(): void {\r\n    this.rotateValue += 90;\r\n  }\r\n\r\n  getTransform(): SafeStyle {\r\n    return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\r\n  }\r\n\r\n  canZoomIn(): boolean {\r\n    return this.zoomValue < this.zoomMax;\r\n  }\r\n\r\n  canZoomOut(): boolean {\r\n    return this.zoomValue > this.zoomMin;\r\n  }\r\n\r\n  canDragOnZoom() {\r\n    return this.zoom && this.zoomValue > 1;\r\n  }\r\n\r\n  mouseDownHandler(e): void {\r\n    if (this.canDragOnZoom()) {\r\n      this.initialX = this.getClientX(e);\r\n      this.initialY = this.getClientY(e);\r\n      this.initialLeft = this.positionLeft;\r\n      this.initialTop = this.positionTop;\r\n      this.isMove = true;\r\n\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  mouseUpHandler(e): void {\r\n    this.isMove = false;\r\n  }\r\n\r\n  mouseMoveHandler(e) {\r\n    if (this.isMove) {\r\n      this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\r\n      this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\r\n    }\r\n  }\r\n\r\n  private getClientX(e): number {\r\n    return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\r\n  }\r\n\r\n  private getClientY(e): number {\r\n    return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\r\n  }\r\n\r\n  private resetPosition() {\r\n    if (this.zoom) {\r\n      this.positionLeft = 0;\r\n      this.positionTop = 0;\r\n    }\r\n  }\r\n\r\n  private isKeyboardNext(e): boolean {\r\n    return e.keyCode === 39;\r\n  }\r\n\r\n  private isKeyboardPrev(e): boolean {\r\n    return e.keyCode === 37;\r\n  }\r\n\r\n  private isKeyboardEsc(e): boolean {\r\n    return e.keyCode === 27;\r\n  }\r\n\r\n  private openFullscreen(): void {\r\n    const element = document.documentElement as any;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  private closeFullscreen(): void {\r\n    if (this.isFullscreen()) {\r\n      const doc = document as any;\r\n\r\n      if (doc.exitFullscreen) {\r\n        doc.exitFullscreen();\r\n      } else if (doc.msExitFullscreen) {\r\n        doc.msExitFullscreen();\r\n      } else if (doc.mozCancelFullScreen) {\r\n        doc.mozCancelFullScreen();\r\n      } else if (doc.webkitExitFullscreen) {\r\n        doc.webkitExitFullscreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  private isFullscreen() {\r\n    const doc = document as any;\r\n\r\n    return doc.fullscreenElement || doc.webkitFullscreenElement\r\n      || doc.mozFullScreenElement || doc.msFullscreenElement;\r\n  }\r\n\r\n\r\n\r\n  private show(first = false) {\r\n    this.loading = true;\r\n    this.stopAutoPlay();\r\n\r\n    this.activeChange.emit(this.index);\r\n\r\n    if (first || !this.animation) {\r\n      this._show();\r\n    } else {\r\n      setTimeout(() => this._show(), 600);\r\n    }\r\n  }\r\n\r\n  private _show() {\r\n    this.zoomValue = 1;\r\n    this.rotateValue = 0;\r\n    this.resetPosition();\r\n\r\n    this.src = this.getSafeUrl(this.images[this.index] as string);\r\n    this.srcIndex = this.index;\r\n    this.description = this.descriptions[this.index];\r\n    this.changeDetectorRef.markForCheck();\r\n\r\n    setTimeout(() => {\r\n      if (this.isLoaded(this.previewImage.nativeElement)) {\r\n        this.loading = false;\r\n        this.startAutoPlay();\r\n        this.changeDetectorRef.markForCheck();\r\n      } else {\r\n        setTimeout(() => {\r\n          if (this.loading) {\r\n            this.showSpinner = true;\r\n            this.changeDetectorRef.markForCheck();\r\n          }\r\n        });\r\n\r\n        this.previewImage.nativeElement.onload = () => {\r\n          this.loading = false;\r\n          this.showSpinner = false;\r\n          this.previewImage.nativeElement.onload = null;\r\n          this.startAutoPlay();\r\n          this.changeDetectorRef.markForCheck();\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  private isLoaded(img): boolean {\r\n    if (!img.complete) {\r\n      return false;\r\n    }\r\n\r\n    return !(typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0);\r\n  }\r\n\r\n}\r\n","export class NgxGalleryAnimation {\r\n    static Fade = 'fade';\r\n    static Slide = 'slide';\r\n    static Rotate = 'rotate';\r\n    static Zoom = 'zoom';\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\r\nimport {NgxGalleryService} from '../ngx-gallery.service';\r\nimport {NgxGalleryOrderedImage} from '../ngx-gallery-ordered-image';\r\nimport {NgxGalleryAction} from '../ngx-gallery-action';\r\nimport {NgxGalleryAnimation} from '../ngx-gallery-animation';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-image',\r\n  templateUrl: './ngx-gallery-image.component.html',\r\n  styleUrls: ['./ngx-gallery-image.component.scss']\r\n})\r\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\r\n  @Input() images: NgxGalleryOrderedImage[];\r\n  @Input() clickable: boolean;\r\n  @Input() selectedIndex: number;\r\n  @Input() arrows: boolean;\r\n  @Input() arrowsAutoHide: boolean;\r\n  @Input() swipe: boolean;\r\n  @Input() animation: string;\r\n  @Input() size: string;\r\n  @Input() arrowPrevIcon: string;\r\n  @Input() arrowNextIcon: string;\r\n  @Input() autoPlay: boolean;\r\n  @Input() autoPlayInterval: number;\r\n  @Input() autoPlayPauseOnHover: boolean;\r\n  @Input() infinityMove: boolean;\r\n  @Input() lazyLoading: boolean;\r\n  @Input() actions: NgxGalleryAction[];\r\n  @Input() descriptions: string[];\r\n  @Input() showDescription: boolean;\r\n  @Input() bullets: boolean;\r\n\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() click = new EventEmitter();\r\n  @Output() activeChange = new EventEmitter();\r\n\r\n  canChangeImage = true;\r\n\r\n  private timer;\r\n\r\n  constructor(private sanitization: DomSanitizer,\r\n              private elementRef: ElementRef, private helperService: NgxGalleryService) { }\r\n\r\n  // @HostBinding('style.display') public display = 'inline-block';\r\n  // @HostBinding('style.background-color') public color = 'lime';\r\n\r\n  ngOnInit() {\r\n    if (this.arrows && this.arrowsAutoHide) {\r\n      this.arrows = false;\r\n    }\r\n\r\n    if (this.autoPlay) {\r\n      this.startAutoPlay();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.swipe) {\r\n      this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    if (this.arrowsAutoHide && !this.arrows) {\r\n      this.arrows = true;\r\n    }\r\n\r\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n      this.stopAutoPlay();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (this.arrowsAutoHide && this.arrows) {\r\n      this.arrows = false;\r\n    }\r\n\r\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n      this.startAutoPlay();\r\n    }\r\n  }\r\n\r\n  reset(index: number): void {\r\n    this.selectedIndex = index;\r\n  }\r\n\r\n  getImages(): NgxGalleryOrderedImage[] {\r\n    if (!this.images) {\r\n      return [];\r\n    }\r\n\r\n    if (this.lazyLoading) {\r\n      const indexes = [this.selectedIndex];\r\n      const prevIndex = this.selectedIndex - 1;\r\n\r\n      if (prevIndex === -1 && this.infinityMove) {\r\n        indexes.push(this.images.length - 1);\r\n      } else if (prevIndex >= 0) {\r\n        indexes.push(prevIndex);\r\n      }\r\n\r\n      const nextIndex = this.selectedIndex + 1;\r\n\r\n      if (nextIndex === this.images.length && this.infinityMove) {\r\n        indexes.push(0);\r\n      } else if (nextIndex < this.images.length) {\r\n        indexes.push(nextIndex);\r\n      }\r\n\r\n      return this.images.filter((img, i) => indexes.indexOf(i) !== -1);\r\n    } else {\r\n      return this.images;\r\n    }\r\n  }\r\n\r\n  startAutoPlay(): void {\r\n    this.stopAutoPlay();\r\n\r\n    this.timer = setInterval(() => {\r\n      if (!this.showNext()) {\r\n        this.selectedIndex = -1;\r\n        this.showNext();\r\n      }\r\n    }, this.autoPlayInterval);\r\n  }\r\n\r\n  stopAutoPlay() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  handleClick(event: Event, index: number): void {\r\n    if (this.clickable) {\r\n      this.click.emit(index);\r\n\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  show(index: number) {\r\n    this.selectedIndex = index;\r\n    this.activeChange.emit(this.selectedIndex);\r\n    this.setChangeTimeout();\r\n  }\r\n\r\n  showNext(): boolean {\r\n    if (this.canShowNext() && this.canChangeImage) {\r\n      this.selectedIndex++;\r\n\r\n      if (this.selectedIndex === this.images.length) {\r\n        this.selectedIndex = 0;\r\n      }\r\n\r\n      this.activeChange.emit(this.selectedIndex);\r\n      this.setChangeTimeout();\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  showPrev(): void {\r\n    if (this.canShowPrev() && this.canChangeImage) {\r\n      this.selectedIndex--;\r\n\r\n      if (this.selectedIndex < 0) {\r\n        this.selectedIndex = this.images.length - 1;\r\n      }\r\n\r\n      this.activeChange.emit(this.selectedIndex);\r\n      this.setChangeTimeout();\r\n    }\r\n  }\r\n\r\n  setChangeTimeout() {\r\n    this.canChangeImage = false;\r\n    let timeout = 1000;\r\n\r\n    if (this.animation === NgxGalleryAnimation.Slide\r\n      || this.animation === NgxGalleryAnimation.Fade) {\r\n      timeout = 500;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.canChangeImage = true;\r\n    }, timeout);\r\n  }\r\n\r\n  canShowNext(): boolean {\r\n    if (this.images) {\r\n      return this.infinityMove || this.selectedIndex < this.images.length - 1;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canShowPrev(): boolean {\r\n    if (this.images) {\r\n      return this.infinityMove || this.selectedIndex > 0;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getSafeUrl(image: string): SafeStyle {\r\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n  }\r\n}\r\n","export class NgxGalleryOrder {\r\n  static Column = 1;\r\n  static Row = 2;\r\n  static Page = 3;\r\n}\r\n","import {Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {DomSanitizer, SafeResourceUrl, SafeStyle} from '@angular/platform-browser';\r\nimport {NgxGalleryService} from '../ngx-gallery.service';\r\nimport {NgxGalleryAction} from '../ngx-gallery-action';\r\nimport {NgxGalleryOrder} from '../ngx-gallery-order';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-thumbnails',\r\n  templateUrl: './ngx-gallery-thumbnails.component.html',\r\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\r\n})\r\nexport class NgxGalleryThumbnailsComponent implements OnInit, OnChanges {\r\n  thumbnailsLeft: string;\r\n  thumbnailsMarginLeft: string;\r\n  mouseenter: boolean;\r\n  remainingCountValue: number;\r\n\r\n  minStopIndex = 0;\r\n\r\n  @Input() images: string[] | SafeResourceUrl[];\r\n  @Input() links: string[];\r\n  @Input() labels: string[];\r\n  @Input() linkTarget: string;\r\n  @Input() columns: number;\r\n  @Input() rows: number;\r\n  @Input() arrows: boolean;\r\n  @Input() arrowsAutoHide: boolean;\r\n  @Input() margin: number;\r\n  @Input() selectedIndex: number;\r\n  @Input() clickable: boolean;\r\n  @Input() swipe: boolean;\r\n  @Input() size: string;\r\n  @Input() arrowPrevIcon: string;\r\n  @Input() arrowNextIcon: string;\r\n  @Input() moveSize: number;\r\n  @Input() order: number;\r\n  @Input() remainingCount: boolean;\r\n  @Input() lazyLoading: boolean;\r\n  @Input() actions: NgxGalleryAction[];\r\n\r\n  @Output() activeChange = new EventEmitter();\r\n\r\n  private index = 0;\r\n\r\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\r\n              private helperService: NgxGalleryService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.selectedIndex) {\r\n      this.validateIndex();\r\n    }\r\n\r\n    if (changes.swipe) {\r\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\r\n        'thumbnails', () => this.moveRight(), () => this.moveLeft());\r\n    }\r\n\r\n    if (this.images) {\r\n      this.remainingCountValue = this.images.length - (this.rows * this.columns);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.mouseenter = true;\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.mouseenter = false;\r\n  }\r\n\r\n  reset(index: number): void {\r\n    this.selectedIndex = index;\r\n    this.setDefaultPosition();\r\n\r\n    this.index = 0;\r\n    this.validateIndex();\r\n  }\r\n\r\n  getImages(): string[] | SafeResourceUrl[] {\r\n    if (!this.images) {\r\n      return [];\r\n    }\r\n\r\n    if (this.remainingCount) {\r\n      return this.images.slice(0, this.rows * this.columns);\r\n    } else if (this.lazyLoading && this.order !== NgxGalleryOrder.Row) {\r\n      let stopIndex = 0;\r\n\r\n      if (this.order === NgxGalleryOrder.Column) {\r\n        stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\r\n      } else if (this.order === NgxGalleryOrder.Page) {\r\n        stopIndex = this.index + ((this.columns * this.rows) * 2);\r\n      }\r\n\r\n      if (stopIndex <= this.minStopIndex) {\r\n        stopIndex = this.minStopIndex;\r\n      } else {\r\n        this.minStopIndex = stopIndex;\r\n      }\r\n\r\n      return this.images.slice(0, stopIndex);\r\n    } else {\r\n      return this.images;\r\n    }\r\n  }\r\n\r\n  handleClick(event: Event, index: number): void {\r\n    if (!this.hasLink(index)) {\r\n      this.selectedIndex = index;\r\n      this.activeChange.emit(index);\r\n\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  hasLink(index: number): boolean {\r\n    if (this.links && this.links.length && this.links[index]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  moveRight(): void {\r\n    if (this.canMoveRight()) {\r\n      this.index += this.moveSize;\r\n      const maxIndex = this.getMaxIndex() - this.columns;\r\n\r\n      if (this.index > maxIndex) {\r\n        this.index = maxIndex;\r\n      }\r\n\r\n      this.setThumbnailsPosition();\r\n    }\r\n  }\r\n\r\n  moveLeft(): void {\r\n    if (this.canMoveLeft()) {\r\n      this.index -= this.moveSize;\r\n\r\n      if (this.index < 0) {\r\n        this.index = 0;\r\n      }\r\n\r\n      this.setThumbnailsPosition();\r\n    }\r\n  }\r\n\r\n  canMoveRight(): boolean {\r\n    return this.index + this.columns < this.getMaxIndex();\r\n  }\r\n\r\n  canMoveLeft(): boolean {\r\n    return this.index !== 0;\r\n  }\r\n\r\n  getThumbnailLeft(index: number): SafeStyle {\r\n    let calculatedIndex;\r\n\r\n    if (this.order === NgxGalleryOrder.Column) {\r\n      calculatedIndex = Math.floor(index / this.rows);\r\n    } else if (this.order === NgxGalleryOrder.Page) {\r\n      calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\r\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\r\n      calculatedIndex = index % this.columns;\r\n    } else {\r\n      calculatedIndex = index % Math.ceil(this.images.length / this.rows);\r\n    }\r\n\r\n    return this.getThumbnailPosition(calculatedIndex, this.columns);\r\n  }\r\n\r\n  getThumbnailTop(index: number): SafeStyle {\r\n    let calculatedIndex;\r\n\r\n    if (this.order === NgxGalleryOrder.Column) {\r\n      calculatedIndex = index % this.rows;\r\n    } else if (this.order === NgxGalleryOrder.Page) {\r\n      calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\r\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\r\n      calculatedIndex = Math.floor(index / this.columns);\r\n    } else {\r\n      calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\r\n    }\r\n\r\n    return this.getThumbnailPosition(calculatedIndex, this.rows);\r\n  }\r\n\r\n  getThumbnailWidth(): SafeStyle {\r\n    return this.getThumbnailDimension(this.columns);\r\n  }\r\n\r\n  getThumbnailHeight(): SafeStyle {\r\n    return this.getThumbnailDimension(this.rows);\r\n  }\r\n\r\n  setThumbnailsPosition(): void {\r\n    this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%';\r\n\r\n    this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\r\n      * this.margin) / this.columns)) * this.index) + 'px';\r\n  }\r\n\r\n  setDefaultPosition(): void {\r\n    this.thumbnailsLeft = '0px';\r\n    this.thumbnailsMarginLeft = '0px';\r\n  }\r\n\r\n  canShowArrows(): boolean {\r\n    if (this.remainingCount) {\r\n      return false;\r\n    } else {\r\n      return this.arrows && this.images && this.images.length > this.getVisibleCount()\r\n        && (!this.arrowsAutoHide || this.mouseenter);\r\n    }\r\n  }\r\n\r\n  validateIndex(): void {\r\n    if (this.images) {\r\n      let newIndex;\r\n\r\n      if (this.order === NgxGalleryOrder.Column) {\r\n        newIndex = Math.floor(this.selectedIndex / this.rows);\r\n      } else {\r\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\r\n      }\r\n\r\n      if (this.remainingCount) {\r\n        newIndex = 0;\r\n      }\r\n\r\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\r\n        const maxIndex = this.getMaxIndex() - this.columns;\r\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\r\n\r\n        this.setThumbnailsPosition();\r\n      }\r\n    }\r\n  }\r\n\r\n  getSafeUrl(image: string): SafeStyle {\r\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n  }\r\n\r\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\r\n    return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\r\n      + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\r\n  }\r\n\r\n  private getThumbnailDimension(count: number): SafeStyle {\r\n    if (this.margin !== 0) {\r\n      return this.getSafeStyle('calc(' + (100 / count) + '% - '\r\n        + (((count - 1) * this.margin) / count) + 'px)');\r\n    } else {\r\n      return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\r\n    }\r\n  }\r\n\r\n  private getMaxIndex(): number {\r\n    if (this.order === NgxGalleryOrder.Page) {\r\n      let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\r\n\r\n      if (this.images.length % this.getVisibleCount() > this.columns) {\r\n        maxIndex += this.columns;\r\n      } else {\r\n        maxIndex += this.images.length % this.getVisibleCount();\r\n      }\r\n\r\n      return maxIndex;\r\n    } else {\r\n      return Math.ceil(this.images.length / this.rows);\r\n    }\r\n  }\r\n\r\n  private getVisibleCount(): number {\r\n    return this.columns * this.rows;\r\n  }\r\n\r\n  private getSafeStyle(value: string): SafeStyle {\r\n    return this.sanitization.bypassSecurityTrustStyle(value);\r\n  }\r\n}\r\n","export interface INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n}\r\n\r\nexport class NgxGalleryAction implements INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n\r\n    constructor(action: INgxGalleryAction) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n\r\n        this.onClick = action.onClick;\r\n    }\r\n}\r\n","export class NgxGalleryLayout {\r\n    static ThumbnailsTop = 'thumbnails-top';\r\n    static ThumbnailsBottom = 'thumbnails-bottom';\r\n}\r\n","export class NgxGalleryImageSize {\r\n    static Cover = 'cover';\r\n    static Contain = 'contain';\r\n}\r\n","import {NgxGalleryAction} from './ngx-gallery-action';\r\nimport {NgxGalleryOrder} from './ngx-gallery-order';\r\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\r\nimport {NgxGalleryAnimation} from './ngx-gallery-animation';\r\nimport {NgxGalleryImageSize} from './ngx-gallery-image-size';\r\n\r\nexport interface INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n}\r\n\r\nexport class NgxGalleryOptions implements INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n\r\n    constructor(obj: INgxGalleryOptions) {\r\n\r\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\r\n\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n}\r\n","import {SafeResourceUrl} from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryOrderedImage {\r\n  src: string | SafeResourceUrl;\r\n  index: number;\r\n}\r\n\r\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\r\n  src: string | SafeResourceUrl;\r\n  index: number;\r\n\r\n  constructor(obj: INgxGalleryOrderedImage) {\r\n    this.src = obj.src;\r\n    this.index = obj.index;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef, EventEmitter,\r\n  HostBinding,\r\n  HostListener, Input,\r\n  OnInit, Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\r\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\r\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\r\nimport {SafeResourceUrl} from '@angular/platform-browser';\r\nimport {NgxGalleryService} from './ngx-gallery.service';\r\nimport {NgxGalleryOptions} from './ngx-gallery-options';\r\nimport {NgxGalleryImage} from './ngx-gallery-image';\r\nimport {NgxGalleryOrderedImage} from './ngx-gallery-ordered-image';\r\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery',\r\n  templateUrl: './ngx-gallery.component.html',\r\n  styleUrls: ['./ngx-gallery.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [NgxGalleryService]\r\n})\r\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\r\n  @Input() options: NgxGalleryOptions[] = [{}];\r\n  @Input() images: NgxGalleryImage[];\r\n\r\n  @Output() imagesReady = new EventEmitter();\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\r\n  @Output() previewOpen = new EventEmitter();\r\n  @Output() previewClose = new EventEmitter();\r\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\r\n\r\n  smallImages: string[] | SafeResourceUrl[];\r\n  mediumImages: NgxGalleryOrderedImage[];\r\n  bigImages: string[] | SafeResourceUrl[];\r\n  descriptions: string[];\r\n  links: string[];\r\n  labels: string[];\r\n\r\n  oldImages: NgxGalleryImage[];\r\n  oldImagesLength = 0;\r\n\r\n  selectedIndex = 0;\r\n  previewEnabled: boolean;\r\n\r\n  currentOptions: NgxGalleryOptions;\r\n\r\n  private breakpoint: number | undefined = undefined;\r\n  private prevBreakpoint: number | undefined = undefined;\r\n  private fullWidthTimeout: any;\r\n\r\n  @ViewChild(NgxGalleryPreviewComponent, { static: false }) preview: NgxGalleryPreviewComponent;\r\n  @ViewChild(NgxGalleryImageComponent, { static: false }) image: NgxGalleryImageComponent;\r\n  @ViewChild(NgxGalleryThumbnailsComponent, { static: false }) thumbnails: NgxGalleryThumbnailsComponent;\r\n\r\n  @HostBinding('style.width') width: string;\r\n  @HostBinding('style.height') height: string;\r\n  @HostBinding('style.left') left: string;\r\n\r\n  constructor(private myElement: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\r\n    this.sortOptions();\r\n    this.setBreakpoint();\r\n    this.setOptions();\r\n    this.checkFullWidth();\r\n    if (this.currentOptions) {\r\n      this.selectedIndex = this.currentOptions.startIndex as number;\r\n    }\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\r\n      || (this.images !== this.oldImages)) {\r\n      this.oldImagesLength = this.images.length;\r\n      this.oldImages = this.images;\r\n      this.setOptions();\r\n      this.setImages();\r\n\r\n      if (this.images && this.images.length) {\r\n        this.imagesReady.emit();\r\n      }\r\n\r\n      if (this.image) {\r\n        this.image.reset(this.currentOptions.startIndex as number);\r\n      }\r\n\r\n      if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\r\n        && this.images.length <= 1) {\r\n        this.currentOptions.thumbnails = false;\r\n        this.currentOptions.imageArrows = false;\r\n      }\r\n\r\n      this.resetThumbnails();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.checkFullWidth();\r\n  }\r\n\r\n  @HostListener('window:resize') onResize() {\r\n    this.setBreakpoint();\r\n\r\n    if (this.prevBreakpoint !== this.breakpoint) {\r\n      this.setOptions();\r\n      this.resetThumbnails();\r\n    }\r\n\r\n    if (this.currentOptions && this.currentOptions.fullWidth) {\r\n\r\n      if (this.fullWidthTimeout) {\r\n        clearTimeout(this.fullWidthTimeout);\r\n      }\r\n\r\n      this.fullWidthTimeout = setTimeout(() => {\r\n        this.checkFullWidth();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  getImageHeight(): string {\r\n    return (this.currentOptions && this.currentOptions.thumbnails) ?\r\n      this.currentOptions.imagePercent + '%' : '100%';\r\n  }\r\n\r\n  getThumbnailsHeight(): string {\r\n    if (this.currentOptions && this.currentOptions.image) {\r\n      return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\r\n        + this.currentOptions.thumbnailsMargin + 'px)';\r\n    } else {\r\n      return '100%';\r\n    }\r\n  }\r\n\r\n  getThumbnailsMarginTop(): string {\r\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\r\n      return this.currentOptions.thumbnailsMargin + 'px';\r\n    } else {\r\n      return '0px';\r\n    }\r\n  }\r\n\r\n  getThumbnailsMarginBottom(): string {\r\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\r\n      return this.currentOptions.thumbnailsMargin + 'px';\r\n    } else {\r\n      return '0px';\r\n    }\r\n  }\r\n\r\n  openPreview(index: number): void {\r\n    if (this.currentOptions.previewCustom) {\r\n      this.currentOptions.previewCustom(index);\r\n    } else {\r\n      this.previewEnabled = true;\r\n      this.preview.open(index);\r\n    }\r\n  }\r\n\r\n  onPreviewOpen(): void {\r\n    this.previewOpen.emit();\r\n\r\n    if (this.image && this.image.autoPlay) {\r\n      this.image.stopAutoPlay();\r\n    }\r\n  }\r\n\r\n  onPreviewClose(): void {\r\n    this.previewEnabled = false;\r\n    this.previewClose.emit();\r\n\r\n    if (this.image && this.image.autoPlay) {\r\n      this.image.startAutoPlay();\r\n    }\r\n  }\r\n\r\n  selectFromImage(index: number) {\r\n    this.select(index);\r\n  }\r\n\r\n  selectFromThumbnails(index: number) {\r\n    this.select(index);\r\n\r\n    if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\r\n      && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\r\n      this.openPreview(this.selectedIndex);\r\n    }\r\n  }\r\n\r\n  show(index: number): void {\r\n    this.select(index);\r\n  }\r\n\r\n  showNext(): void {\r\n    this.image.showNext();\r\n  }\r\n\r\n  showPrev(): void {\r\n    this.image.showPrev();\r\n  }\r\n\r\n  canShowNext(): boolean {\r\n    if (this.images && this.currentOptions) {\r\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canShowPrev(): boolean {\r\n    if (this.images && this.currentOptions) {\r\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex > 0);\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  previewSelect(index: number) {\r\n    this.previewChange.emit({index, image: this.images[index]});\r\n  }\r\n\r\n  moveThumbnailsRight() {\r\n    this.thumbnails.moveRight();\r\n  }\r\n\r\n  moveThumbnailsLeft() {\r\n    this.thumbnails.moveLeft();\r\n  }\r\n\r\n  canMoveThumbnailsRight() {\r\n    return this.thumbnails.canMoveRight();\r\n  }\r\n\r\n  canMoveThumbnailsLeft() {\r\n    return this.thumbnails.canMoveLeft();\r\n  }\r\n\r\n  private resetThumbnails() {\r\n    if (this.thumbnails) {\r\n      this.thumbnails.reset(this.currentOptions.startIndex as number);\r\n    }\r\n  }\r\n\r\n  private select(index: number) {\r\n    this.selectedIndex = index;\r\n\r\n    this.change.emit({\r\n      index,\r\n      image: this.images[index]\r\n    });\r\n  }\r\n\r\n  private checkFullWidth(): void {\r\n    if (this.currentOptions && this.currentOptions.fullWidth) {\r\n      this.width = document.body.clientWidth + 'px';\r\n      this.left = (-(document.body.clientWidth -\r\n        this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\r\n    }\r\n  }\r\n\r\n  private setImages(): void {\r\n    this.smallImages = this.images.map((img) => img.small as string);\r\n    this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\r\n      src: img.medium,\r\n      index: i\r\n    }));\r\n    this.bigImages = this.images.map((img) => img.big as string);\r\n    this.descriptions = this.images.map((img) => img.description as string);\r\n    this.links = this.images.map((img) => img.url as string);\r\n    this.labels = this.images.map((img) => img.label as string);\r\n  }\r\n\r\n  private setBreakpoint(): void {\r\n    this.prevBreakpoint = this.breakpoint;\r\n    let breakpoints;\r\n\r\n    if (typeof window !== 'undefined') {\r\n      breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\r\n        .map((opt) => opt.breakpoint);\r\n    }\r\n\r\n    if (breakpoints && breakpoints.length) {\r\n      this.breakpoint = breakpoints.pop();\r\n    } else {\r\n      this.breakpoint = undefined;\r\n    }\r\n  }\r\n\r\n  private sortOptions(): void {\r\n    this.options = [\r\n      ...this.options.filter((a) => a.breakpoint === undefined),\r\n      ...this.options\r\n        .filter((a) => a.breakpoint !== undefined)\r\n        .sort((a, b) => b.breakpoint - a.breakpoint)\r\n    ];\r\n  }\r\n\r\n  private setOptions(): void {\r\n    this.currentOptions = new NgxGalleryOptions({});\r\n\r\n    this.options\r\n      .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\r\n      .map((opt) => this.combineOptions(this.currentOptions, opt));\r\n\r\n    this.width = this.currentOptions.width as string;\r\n    this.height = this.currentOptions.height as string;\r\n  }\r\n\r\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\r\n    Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\r\n  }\r\n\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-arrows',\r\n  templateUrl: './ngx-gallery-arrows.component.html',\r\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\r\n})\r\nexport class NgxGalleryArrowsComponent implements OnInit {\r\n  @Input() prevDisabled: boolean;\r\n  @Input() nextDisabled: boolean;\r\n  @Input() arrowPrevIcon: string;\r\n  @Input() arrowNextIcon: string;\r\n\r\n  @Output() prevClick = new EventEmitter();\r\n  @Output() nextClick = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handlePrevClick(): void {\r\n    this.prevClick.emit();\r\n  }\r\n\r\n  handleNextClick(): void {\r\n    this.nextClick.emit();\r\n  }\r\n}\r\n","import {AfterViewInit, ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-action',\r\n  templateUrl: './ngx-gallery-action.component.html',\r\n  styleUrls: ['./ngx-gallery-action.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxGalleryActionComponent implements OnInit/*, AfterViewInit*/ {\r\n  @Input() icon: string;\r\n  @Input() disabled = false;\r\n  @Input() titleText = '';\r\n\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() click: EventEmitter<Event> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleClick(event: Event) {\r\n    if (!this.disabled) {\r\n      this.click.emit(event);\r\n    }\r\n\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  /*ngAfterViewInit(): void {\r\n    this.icon = 'fa fa-times-circle';\r\n  }*/\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-gallery-bullets',\r\n  templateUrl: './ngx-gallery-bullets.component.html',\r\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\r\n})\r\nexport class NgxGalleryBulletsComponent implements OnInit {\r\n  @Input() count: number;\r\n  @Input() active = 0;\r\n\r\n  // tslint:disable-next-line:no-output-native\r\n  @Output() change = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getBullets(): number[] {\r\n    return Array(this.count);\r\n  }\r\n\r\n  handleChange(event: Event, index: number): void {\r\n    this.change.emit(index);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {NgxGalleryComponent} from './ngx-gallery.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryArrowsComponent} from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryActionComponent} from './ngx-gallery-action/ngx-gallery-action.component';\nimport {NgxGalleryBulletsComponent} from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\nexport class CustomHammerConfig extends HammerGestureConfig  {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  } as any;\n}\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [ CommonModule],\n  exports: [NgxGalleryComponent],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n  ]\n})\nexport class NgxGalleryModule {\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n}\r\n\r\nexport class NgxGalleryImage implements INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n\r\n    constructor(obj: INgxGalleryImage) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n}\r\n"]}